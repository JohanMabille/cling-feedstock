{% set name = "cling" %}
{% set version = "v0.4" %}
{% set sha256 = "67b181309c5fe712dcd00903d48fb6965c46d517847d0b7f506a1921ba2f56b6" %}
{% set build_number = "0" %}
{% set llvm_version = "3.9.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://github.com/root-project/cling/archive/{{ version }}.tar.gz
  sha256: {{ sha256 }}
  patches:
    - 0001-conda-patch.patch 

build:
  number: {{ build_number }}
  skip: true  # [(win and py<35) or (win and py36)]
  features:
    - cling
    - vc14  # [win]

requirements:
  build:
    - python          # required for the installation of the kernel spec.
    - toolchain
    - cmake
    - gcc-6   # [linux]
    - binutils >=2.28  #[linux]
    - cling-patches
    - llvmdev =={{ llvm_version }}
    - clangdev =={{ llvm_version }}
    - vc 14  # [win]
    - libcxx =={{ llvm_version }}  # [not win]
    - jupyter_client  # required for the installation of the kernel spec.
 
  run:
    - python          # cling includes a python package (cling-kernel) - must be recognized as a Python package.
    - cling-patches
    - gcc-6   # [linux]
    - llvmdev =={{ llvm_version }}
    - clangdev =={{ llvm_version }}
    - libcxx =={{ llvm_version }}  # [not win]
    - vs2015_runtime  # [win]

test:
  commands:
    - test -f ${PREFIX}/share/jupyter/kernels/cling-cpp11/kernel.json  # [unix]
    - test -f ${PREFIX}/share/jupyter/kernels/cling-cpp14/kernel.json  # [unix]
    - test -f ${PREFIX}/share/jupyter/kernels/cling-cpp17/kernel.json  # [unix]
    - if exist %PREFIX%\share\jupyter\kernels\cling-cpp11\kernel.json (exit 0) else (exit 1)  # [win]
    - if exist %PREFIX%\share\jupyter\kernels\cling-cpp14\kernel.json (exit 0) else (exit 1)  # [win]
    - if exist %PREFIX%\share\jupyter\kernels\cling-cpp17\kernel.json (exit 0) else (exit 1)  # [win]

about:
  home: https://root.cern.ch/cling
  license: UI/NCSAOSL
  license_family: BSD
  license_file: LICENSE.TXT
  summary: 'Cling - The Interactive C++ Interpreter'
  description: |
    Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.
  doc_url: https://root.cern.ch/cling
  dev_url: https://github.com/root-mirror/cling

extra:
  recipe-maintainers:
    - SylvainCorlay
    - JohanMabille
